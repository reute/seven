<UserControl
    x:Class="SevenPrism.Views.Sales"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:SevenPrism.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:SevenPrism.Properties"
    xmlns:prism="http://prismlibrary.com/"
    d:DesignHeight="450"
    d:DesignWidth="800"
    helpers:ValidationHelper.IsEnabled="true"
    helpers:ValidationHelper.IsValid="{Binding IsValid, Mode=OneWayToSource}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <!--  Alternative to creating the CollectionViewSource in ViewModel like with Articles and Binding to DataContext  -->
    <UserControl.Resources>
        <CollectionViewSource x:Key="Refs" Source="{Binding Refs}" />
    </UserControl.Resources>

    <DockPanel>
        <ToolBarTray Margin="0,1,0,1" DockPanel.Dock="Top">
            <ToolBar>
                <Button Command="{Binding AddNewSaleCommand}">
                    <AccessText Text="{x:Static p:Resources.AddMenu}" />
                </Button>
                <Button Command="{Binding RemoveSaleCommand}" CommandParameter="{Binding ElementName=SalesGrid, Path=SelectedItems}">
                    <AccessText Text="{x:Static p:Resources.RemoveMenu}" />
                </Button>
                <Separator />
                <Label
                    Margin="0"
                    Padding="5,0,7,0"
                    VerticalAlignment="Center"
                    Content="{x:Static p:Resources.SearchMenu}"
                    Target="{Binding ElementName=searchBox}" />
                <TextBox
                    x:Name="searchBox"
                    Width="150"
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    Text="{Binding Path=FilterString, UpdateSourceTrigger=PropertyChanged}" />
            </ToolBar>
        </ToolBarTray>

        <!--  Deactivated Row header, ignoring row validation because of https://stackoverflow.com/questions/5099039/wpf-datagrid-validation-errors-not-clearing  -->
        <DataGrid
            x:Name="SalesGrid"
            AlternatingRowBackground="LightGoldenrodYellow"
            AlternationCount="2"
            BorderThickness="0"
            CanUserDeleteRows="False"
            HeadersVisibility="Column"
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding SalesCollectionView}"
            RowHeaderWidth="15"
            ScrollViewer.CanContentScroll="False"
            SelectionUnit="FullRow"
            VerticalScrollBarVisibility="Auto">

            <DataGrid.InputBindings>
                <KeyBinding
                    Key="Del"
                    Command="{Binding RemoveSaleCommand}"
                    CommandParameter="{Binding ElementName=SalesGrid, Path=SelectedItems}" />
            </DataGrid.InputBindings>

            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Date, StringFormat=d, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                    EditingElementStyle="{StaticResource TextCellEditingStyle}"
                    ElementStyle="{StaticResource TextCellElementStyle}"
                    Header="{x:Static p:Resources.ColumnHeaderDate}" />

                <DataGridComboBoxColumn
                    Width="*"
                    DisplayMemberPath="Name"
                    EditingElementStyle="{StaticResource ComboBoxElementStyle}"
                    ElementStyle="{StaticResource ComboBoxElementStyle}"
                    Header="{x:Static p:Resources.ColumnHeaderStaff}"
                    IsReadOnly="false"
                    ItemsSource="{Binding Source={StaticResource Refs}}"
                    SelectedItemBinding="{Binding Ref, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Article" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox
                                DisplayMemberPath="Description"
                                IsEditable="True"
                                IsTextSearchEnabled="True"
                                ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.Articles}"
                                SelectedItem="{Binding Article, UpdateSourceTrigger=LostFocus}"
                                Style="{StaticResource ComboBoxElementStyle}"
                                Text="{Binding ArticleDescription, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Amount, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                    EditingElementStyle="{StaticResource TextCellEditingStyle}"
                    ElementStyle="{StaticResource TextCellElementStyle}"
                    Header="{x:Static p:Resources.ColumnHeaderNumber}" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Price, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                    EditingElementStyle="{StaticResource TextCellEditingStyle}"
                    ElementStyle="{StaticResource TextCellElementStyle}"
                    Header="{x:Static p:Resources.ColumnHeaderPrice}" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Sum, Mode=OneWay}"
                    ElementStyle="{StaticResource TextCellElementStyle}"
                    Header="{x:Static p:Resources.ColumnHeaderSum}"
                    IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
